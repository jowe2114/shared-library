import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import org.apache.http.HttpResponse
import org.apache.http.client.methods.HttpGet
import org.apache.http.client.methods.HttpPost
import org.apache.http.entity.StringEntity
import org.apache.http.impl.client.HttpClientBuilder
import org.codehaus.groovy.runtime.StackTraceUtils

// Function to pull a Docker image
def pullImage(dockerUsername, dockerPassword, imageName) {
    def authUrl = "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${imageName}:pull"
    def httpClient = HttpClientBuilder.create().build()
    def authRequest = new HttpGet(authUrl)

    try {
        HttpResponse authResponse = httpClient.execute(authRequest)
        def authJson = new JsonSlurper().parseText(authResponse.getEntity().getContent().text)
        def token = authJson.token

        def pullUrl = "https://registry-1.docker.io/v2/${imageName}/manifests/latest"
        def pullRequest = new HttpGet(pullUrl)
        pullRequest.addHeader("Authorization", "Bearer ${token}")

        HttpResponse pullResponse = httpClient.execute(pullRequest)
        if (pullResponse.getStatusLine().getStatusCode() == 200) {
            println "Successfully pulled image: ${imageName}"
        } else {
            println "Failed to pull image: ${imageName}"
        }
    } catch (Exception e) {
        println "Error pulling image: ${imageName}"
        e.printStackTrace()
    }
}

// Function to push a Docker image
def pushImage(dockerUsername, dockerPassword, imageName) {
    def authUrl = "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${imageName}:pull,push"
    def httpClient = HttpClientBuilder.create().build()
    def authRequest = new HttpGet(authUrl)

    try {
        HttpResponse authResponse = httpClient.execute(authRequest)
        def authJson = new JsonSlurper().parseText(authResponse.getEntity().getContent().text)
        def token = authJson.token

        def pushUrl = "https://registry-1.docker.io/v2/${imageName}/blobs/uploads/"
        def pushRequest = new HttpPost(pushUrl)
        pushRequest.addHeader("Authorization", "Bearer ${token}")

        HttpResponse pushResponse = httpClient.execute(pushRequest)
        if (pushResponse.getStatusLine().getStatusCode() == 202) {
            println "Successfully pushed image: ${imageName}"
        } else {
            println "Failed to push image: ${imageName}"
        }
    } catch (Exception e) {
        println "Error pushing image: ${imageName}"
        e.printStackTrace()
    }
}

// Usage Example
def dockerUsername = "jowe2114"
def dockerPassword = "Umar212121"
def imageName = "Jenkins_project"

pullImage(dockerUsername, dockerPassword, imageName)
pushImage(dockerUsername, dockerPassword, imageName)
